name: Build, Test, and Release

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  schedule:
    - cron: '0 0 * * 6'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  # Allow concurrent run for main, MR, and tag
  # Disallow concurrent runs on same MRs, tags, and main (triggered by dispatch, schedule, or push)
  group: ${{ format('{0}-{1}', github.job, github.ref) }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ 17 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu' #ZOLO!

      - name: Grant execute permission for gradlew
        if: runner.os == 'Linux'
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assemble --info

      - name: Upload build results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }} Java ${{ matrix.java }} build results
          path: ${{ github.workspace }}/build/libs/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/build/libs/*
          generate_release_notes: true
          name: ${{ format('Release {0}', github.run_number) }}
          fail_on_unmatched_files: true
          draft: false
          tag_name: ${{ github.run_number }}
  notify:
    name: Send job complete notification
    runs-on: ubuntu-latest
    needs:
      - build
    if: always() && (github.ref_name == 'main')
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Set environment
        if: github.ref_name == 'main'
        run: |
          echo "RELEASE_TYPE=snapshot" >> $GITHUB_ENV
          echo "SNAPSHOT_ADDR=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
          echo "RELEASE_ADDR=https://github.com/${{ github.repository }}/releases/tag/${{ github.run_number }}" >> $GITHUB_ENV

      - name: Check if failure
        if: ${{ failure() }}
        run: echo "SUCCESS=false" >> $GITHUB_ENV
      - name: Check if success
        if: ${{ success() }} || (github.event_name == 'schedule')
        run: echo "SUCCESS=true" >> $GITHUB_ENV

      - name: Send to Discord
        run: |
          cd .github/discordnotify
          npm start ${{ github.repository }} ${{ github.ref_name }} ${{ env.SNAPSHOT_ADDR }} ${{ env.RELEASE_ADDR }} https://api.github.com/repos/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.event.after }} ${{ env.SUCCESS }}
        env:
          SNAPSHOT_WEBHOOK: ${{ secrets.SNAPSHOT_WEBHOOK }}
          RELEASE_WEBHOOK: ${{ secrets.RELEASE_WEBHOOK }}
          IMAGE_URL: ${{ vars.IMAGE_URL }},
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
